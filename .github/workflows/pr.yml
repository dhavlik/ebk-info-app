name: Pull Request Validation

on:
  pull_request:
    branches:
      - main

jobs:
  test:
    name: Test & Analyze
    runs-on: ubuntu-latest
    permissions:
      contents: write
      actions: read
      checks: write
      pull-requests: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.32.0'
          channel: 'stable'
          cache: true

      - name: Get dependencies
        run: flutter pub get

      - name: Analyze project source
        run: flutter analyze

      - name: Run tests
        run: |
          # Run unit and widget tests, excluding integration tests for now
          flutter test --coverage \
            --exclude-tags=integration \
            --dart-define=FLUTTER_TEST_INTEGRATION_DISABLED=true

  build-android:
    name: Build Android
    runs-on: ubuntu-latest
    needs: test
    permissions:
      contents: write
      pages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.32.0'
          channel: 'stable'
          cache: true

      - name: Get dependencies
        run: flutter pub get

      - name: Build APK
        run: flutter build apk --release

      - name: Prepare APK for upload
        run: |
          mkdir -p apk-upload
          cp build/app/outputs/flutter-apk/app-release.apk apk-upload/ebk-app-pr-${{ github.event.number }}.apk

      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: apk-build-pr-${{ github.event.number }}
          path: apk-upload/
          retention-days: 7

  build-web:
    name: Build Web
    runs-on: ubuntu-latest
    needs: test
    permissions:
      contents: write
      pages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.32.0'
          channel: 'stable'
          cache: true

      - name: Get dependencies
        run: flutter pub get

      - name: Build Web
        run: flutter build web --release --base-href="/ebk-info-app/web/pr-${{ github.event.number }}/"

      - name: Upload Web artifact
        uses: actions/upload-artifact@v4
        with:
          name: web-build-pr-${{ github.event.number }}
          path: build/web/
          retention-days: 7

  deploy-to-pages:
    name: Deploy to GitHub Pages
    runs-on: ubuntu-latest
    needs: [build-android, build-web]
    if: github.event_name == 'pull_request'
    permissions:
      contents: write
      pages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download APK artifact
        uses: actions/download-artifact@v4
        with:
          name: apk-build-pr-${{ github.event.number }}
          path: apk-artifacts/

      - name: Download Web artifact
        uses: actions/download-artifact@v4
        with:
          name: web-build-pr-${{ github.event.number }}
          path: web-artifacts/

      - name: Prepare combined deployment
        run: |
          echo "=== Starting deployment preparation ==="

          # Create deployment directories
          mkdir -p deployment/apks/pr-${{ github.event.number }}
          mkdir -p deployment/web/pr-${{ github.event.number }}

          echo "=== Checking workspace and artifacts ==="
          ls -la
          echo "=== PWD is: $(pwd) ==="

          # Debug APK artifacts
          if [ -d "apk-artifacts" ]; then
            echo "APK artifacts directory exists:"
            find apk-artifacts -type f -exec ls -la {} \;
            # Copy files individually to avoid issues with empty directories
            find apk-artifacts -name "*.apk" -exec cp {} deployment/apks/pr-${{ github.event.number }}/ \;
            echo "APK files copied"
          else
            echo "Error: APK artifacts directory not found"
          fi

          # Debug Web artifacts
          if [ -d "web-artifacts" ]; then
            echo "Web artifacts directory exists:"
            find web-artifacts -type f | head -20
            echo "Total web files: $(find web-artifacts -type f | wc -l)"
            # Copy web files preserving structure
            if [ "$(find web-artifacts -type f | wc -l)" -gt 0 ]; then
              cp -r web-artifacts/* deployment/web/pr-${{ github.event.number }}/
              echo "Web files copied successfully"
            else
              echo "Warning: No web files found in artifacts"
            fi
          else
            echo "Error: Web artifacts directory not found"
          fi

          # Create simple index.html for APK directory with download link
          echo '<!DOCTYPE html>' > deployment/apks/pr-${{ github.event.number }}/index.html
          echo '<html lang="en">' >> deployment/apks/pr-${{ github.event.number }}/index.html
          echo '<head>' >> deployment/apks/pr-${{ github.event.number }}/index.html
          echo '    <meta charset="UTF-8">' >> deployment/apks/pr-${{ github.event.number }}/index.html
          echo '    <meta name="viewport" content="width=device-width, initial-scale=1.0">' >> deployment/apks/pr-${{ github.event.number }}/index.html
          echo '    <title>EBK App - PR ${{ github.event.number }} APK Download</title>' >> deployment/apks/pr-${{ github.event.number }}/index.html
          echo '</head>' >> deployment/apks/pr-${{ github.event.number }}/index.html
          echo '<body>' >> deployment/apks/pr-${{ github.event.number }}/index.html
          echo '    <h1>EBK App - Pull Request #${{ github.event.number }}</h1>' >> deployment/apks/pr-${{ github.event.number }}/index.html
          echo '    <h2>Android APK Download</h2>' >> deployment/apks/pr-${{ github.event.number }}/index.html
          echo '    <p>Download the Android APK for testing:</p>' >> deployment/apks/pr-${{ github.event.number }}/index.html
          echo '    <p><a href="ebk-app-pr-${{ github.event.number }}.apk" download>📲 Download APK</a></p>' >> deployment/apks/pr-${{ github.event.number }}/index.html
          echo '    <p><strong>Installation:</strong> Enable "Unknown sources" in Android settings, then install the downloaded APK.</p>' >> deployment/apks/pr-${{ github.event.number }}/index.html
          echo '</body>' >> deployment/apks/pr-${{ github.event.number }}/index.html
          echo '</html>' >> deployment/apks/pr-${{ github.event.number }}/index.html

          # Copy docs landing page to root if it exists
          if [ -f "docs/index.html" ]; then
            echo "Copying docs/index.html to deployment root"
            cp docs/index.html deployment/
          fi

          # Ensure we have something to deploy - create a minimal index if needed
          if [ ! -f "deployment/index.html" ]; then
            echo "Creating minimal root index.html"
            echo '<!DOCTYPE html>' > deployment/index.html
            echo '<html lang="en">' >> deployment/index.html
            echo '<head>' >> deployment/index.html
            echo '    <meta charset="UTF-8">' >> deployment/index.html
            echo '    <meta name="viewport" content="width=device-width, initial-scale=1.0">' >> deployment/index.html
            echo '    <title>EBK App Downloads</title>' >> deployment/index.html
            echo '</head>' >> deployment/index.html
            echo '<body>' >> deployment/index.html
            echo '    <h1>EBK App Downloads</h1>' >> deployment/index.html
            echo '    <p>Build artifacts for pull requests will appear here.</p>' >> deployment/index.html
            echo '</body>' >> deployment/index.html
            echo '</html>' >> deployment/index.html
          fi

          echo "=== Final deployment structure ==="
          find deployment -type f -exec ls -la {} \;
          echo "=== Total files in deployment ==="
          find deployment -type f | wc -l
          echo "============================"

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: deployment
          keep_files: true
          force_orphan: false

  comment-build-links:
    name: Comment Build Links
    runs-on: ubuntu-latest
    needs: [deploy-to-pages]
    if: github.event_name == 'pull_request'
    permissions:
      pull-requests: write

    steps:
      - name: Comment on PR with build links
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const prNumber = context.issue.number;
            const repo = context.repo;

            console.log(`Repository: ${repo.owner}/${repo.repo}`);
            console.log(`PR Number: ${prNumber}`);

            // Construct the GitHub Pages URLs
            const apkUrl = `https://${repo.owner}.github.io/${repo.repo}/apks/pr-${prNumber}/ebk-app-pr-${prNumber}.apk`;
            const webUrl = `https://${repo.owner}.github.io/${repo.repo}/web/pr-${prNumber}/`;

            console.log(`APK URL: ${apkUrl}`);
            console.log(`Web URL: ${webUrl}`);

            const commentBody = `## 🚀 Build Artifacts Ready for Testing!

            Your pull request has been built successfully! You can test the changes in multiple ways:

            ### 📱 Android APK
            **[📲 Download APK](${apkUrl})**

            **Installation steps:**
            1. Click the download link above
            2. Allow downloads from unknown sources in your Android settings
            3. Install the APK file
            4. Test the changes in this PR

            ### 🌐 Web App
            **[🔗 Open Web App](${webUrl})**

            **Testing:**
            1. Click the link above to open the web version
            2. Test the changes directly in your browser
            3. Works on desktop and mobile browsers

            ---

            **Note:** Both builds will be available as long as this PR exists.

            _This comment was automatically generated by GitHub Actions._`;

            // Check if we already commented on this PR
            const { data: comments } = await github.rest.issues.listComments({
              owner: repo.owner,
              repo: repo.repo,
              issue_number: prNumber,
            });

            const existingComment = comments.find(comment =>
              comment.user.type === 'Bot' &&
              comment.body.includes('Build Artifacts Ready for Testing!')
            );

            if (existingComment) {
              // Update existing comment
              await github.rest.issues.updateComment({
                owner: repo.owner,
                repo: repo.repo,
                comment_id: existingComment.id,
                body: commentBody
              });
              console.log('✅ Updated existing build links comment');
            } else {
              // Create new comment
              await github.rest.issues.createComment({
                owner: repo.owner,
                repo: repo.repo,
                issue_number: prNumber,
                body: commentBody
              });
              console.log('✅ Posted new build links comment');
            }
