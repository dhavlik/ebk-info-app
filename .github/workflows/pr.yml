name: Pull Request Validation

on:
  pull_request:
    branches:
      - main

jobs:
  test:
    name: Test & Analyze
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.32.0'
          channel: 'stable'
          cache: true

      - name: Get dependencies
        run: flutter pub get

      - name: Analyze project source
        run: flutter analyze

      - name: Run tests
        run: |
          # Run unit and widget tests, excluding integration tests for now
          flutter test --coverage \
            --exclude-tags=integration \
            --dart-define=FLUTTER_TEST_INTEGRATION_DISABLED=true

  build-android:
    name: Build Android APK
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.32.0'
          channel: 'stable'
          cache: true

      - name: Get dependencies
        run: flutter pub get

      - name: Build APK
        run: flutter build apk --release

      - name: Upload APK Artifact
        uses: actions/upload-artifact@v4
        with:
          name: android-apk
          path: build/app/outputs/flutter-apk/app-release.apk
          retention-days: 30

  build-web:
    name: Build Web App
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.32.0'
          channel: 'stable'
          cache: true

      - name: Get dependencies
        run: flutter pub get

      - name: Build Web
        run: flutter build web --release --base-href="/dev/ebk-info-app-prs/${{ github.event.number }}/"

      - name: Upload Web Artifact
        uses: actions/upload-artifact@v4
        with:
          name: web-build
          path: build/web/
          retention-days: 30

  deploy-to-pages:
    name: Deploy to GitHub Pages
    runs-on: ubuntu-latest
    needs: [build-android, build-web]
    if: github.event_name == 'pull_request'

    permissions:
      contents: write
      pages: write
      id-token: write

    steps:
      - name: Download APK artifact
        uses: actions/download-artifact@v4
        with:
          name: android-apk
          path: ./apk-download

      - name: Download web build artifact
        uses: actions/download-artifact@v4
        with:
          name: web-build
          path: ./web-download

      - name: Prepare GitHub Pages deployment
        run: |
          echo "=== Preparing GitHub Pages deployment structure ==="

          # Create the deployment structure
          mkdir -p pages-deployment/ebk-info-app-prs/${{ github.event.number }}
          mkdir -p pages-deployment/ebk-info-app-apks

          # Copy web build to the PR-specific directory (avoid hidden files issue)
          if [ -d "./web-download" ] && [ "$(ls -A ./web-download)" ]; then
            cp -r ./web-download/* pages-deployment/ebk-info-app-prs/${{ github.event.number }}/
            echo "Web files copied successfully"
          else
            echo "ERROR: web-download directory is empty or doesn't exist"
            exit 1
          fi

          # Copy APK to the APK directory with PR number in filename
          if [ -f "./apk-download/app-release.apk" ]; then
            cp ./apk-download/app-release.apk pages-deployment/ebk-info-app-apks/${{ github.event.number }}.apk
            echo "APK copied successfully"
          else
            echo "ERROR: APK file not found"
            exit 1
          fi

          # Create .nojekyll file to prevent Jekyll processing
          touch pages-deployment/.nojekyll

          # Copy docs landing page to root if it exists
          if [ -f "docs/index.html" ]; then
            echo "Copying docs/index.html to deployment root"
            cp docs/index.html pages-deployment/
          fi

          # Create a simple index.html if it doesn't exist
          if [ ! -f "pages-deployment/index.html" ]; then
            echo "Creating minimal root index.html"
            cat > pages-deployment/index.html << 'EOF'
          <!DOCTYPE html>
          <html lang="en">
          <head>
              <meta charset="UTF-8">
              <meta name="viewport" content="width=device-width, initial-scale=1.0">
              <title>EBK App - PR Builds</title>
              <style>
                  body { font-family: Arial, sans-serif; margin: 40px; }
                  h1 { color: #333; }
                  p { color: #666; }
                  .info { background: #f5f5f5; padding: 20px; border-radius: 8px; margin: 20px 0; }
              </style>
          </head>
          <body>
              <h1>EBK App - PR Builds</h1>
              <div class="info">
                  <p><strong>Web Apps:</strong> Available at <code>/dev/ebk-info-app-prs/&lt;pr-number&gt;/</code></p>
                  <p><strong>APK Downloads:</strong> Available at <code>/dev/ebk-info-app-apks/&lt;pr-number&gt;.apk</code></p>
              </div>
              <p>This page hosts builds for pull requests. Check your PR comments for direct links to your builds.</p>
          </body>
          </html>
          EOF
          fi

          echo "=== Final deployment structure ==="
          find pages-deployment -type f -exec ls -la {} \;
          echo "=== Total files in deployment ==="
          find pages-deployment -type f | wc -l

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./pages-deployment
          destination_dir: dev
          keep_files: true
          force_orphan: false

  comment-on-pr:
    name: Comment Build Links
    runs-on: ubuntu-latest
    needs: [deploy-to-pages]
    if: github.event_name == 'pull_request'
    permissions:
      pull-requests: write

    steps:
      - name: Comment on PR with GitHub Pages links
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const prNumber = context.issue.number;
            const repo = context.repo;

            console.log(`Repository: ${repo.owner}/${repo.repo}`);
            console.log(`PR Number: ${prNumber}`);

            // Construct the GitHub Pages URLs
            const webUrl = `https://${repo.owner}.github.io/dev/ebk-info-app-prs/${prNumber}/`;
            const apkUrl = `https://${repo.owner}.github.io/dev/ebk-info-app-apks/${prNumber}.apk`;

            console.log(`Web URL: ${webUrl}`);
            console.log(`APK URL: ${apkUrl}`);

            const commentBody = `## 🚀 Build Artifacts Ready for Testing!

            Your pull request has been built successfully! You can test the changes directly:

            ### 🌐 Web App
            **[🔗 Open Web App](${webUrl})**

            Test the changes directly in your browser - works on desktop and mobile!

            ### 📱 Android APK
            **[📲 Download APK](${apkUrl})**

            **Installation steps:**
            1. Click the download link above
            2. Allow downloads from unknown sources in your Android settings if prompted
            3. Install the APK file
            4. Test the changes on your Android device

            ---

            **Note:** Both builds will be available as long as this PR exists and will be automatically cleaned up when the PR is closed.

            _This comment was automatically generated by GitHub Actions._`;

            // Check if we already commented on this PR
            const { data: comments } = await github.rest.issues.listComments({
              owner: repo.owner,
              repo: repo.repo,
              issue_number: prNumber,
            });

            const existingComment = comments.find(comment =>
              comment.user.type === 'Bot' &&
              comment.body.includes('Build Artifacts Ready for Testing!')
            );

            if (existingComment) {
              // Update existing comment
              await github.rest.issues.updateComment({
                owner: repo.owner,
                repo: repo.repo,
                comment_id: existingComment.id,
                body: commentBody
              });
              console.log('✅ Updated existing build links comment');
            } else {
              // Create new comment
              await github.rest.issues.createComment({
                owner: repo.owner,
                repo: repo.repo,
                issue_number: prNumber,
                body: commentBody
              });
              console.log('✅ Posted new build links comment');
            }
