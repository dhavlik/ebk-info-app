name: CI/CD Pipeline

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main

jobs:
  test:
    name: Test & Analyze
    runs-on: ubuntu-latest
    permissions:
      contents: write
      actions: read
      checks: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.32.0'
          channel: 'stable'
          cache: true

      - name: Get dependencies
        run: flutter pub get

      - name: Check and apply dart format
        id: format-check
        run: |
          # Apply dart format
          dart format .

          # Check if there are any changes
          if ! git diff --quiet; then
            echo "üîß Formatting changes detected"
            echo "needs_formatting=true" >> $GITHUB_OUTPUT

            # If this is the main branch, try to auto-commit
            if [ "${{ github.ref }}" = "refs/heads/main" ] && [ "${{ github.event_name }}" = "push" ]; then
              echo "üìù Attempting to commit formatting fixes to main branch..."
              git config --local user.email "action@github.com"
              git config --local user.name "GitHub Action"
              git add .
              git commit -m "üé® Auto-fix: Apply dart format [skip ci]"

              # Try to push, but don't fail if it doesn't work
              if git push; then
                echo "‚úÖ Successfully committed formatting fixes"
                echo "committed=true" >> $GITHUB_OUTPUT
              else
                echo "‚ö†Ô∏è Could not push directly, will create PR instead"
                echo "committed=false" >> $GITHUB_OUTPUT
              fi
            else
              echo "üìã Not main branch or not a push event, skipping auto-commit"
              echo "committed=false" >> $GITHUB_OUTPUT
            fi
          else
            echo "‚úÖ No formatting changes needed"
            echo "needs_formatting=false" >> $GITHUB_OUTPUT
            echo "committed=true" >> $GITHUB_OUTPUT
          fi

      - name: Create PR for formatting fixes
        if: steps.format-check.outputs.needs_formatting == 'true' && steps.format-check.outputs.committed == 'false'
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "üé® Auto-fix: Apply dart format"
          title: "üé® Automated Code Formatting"
          body: |
            ## Automated Code Formatting

            This PR applies `dart format` to ensure consistent code style.

            **Changes:**
            - Applied automatic dart formatting
            - No functional changes to the code

            **Note:** This PR was created automatically by GitHub Actions.
          branch: automated-formatting-${{ github.run_number }}
          delete-branch: true

      - name: Fail if formatting needed but couldn't be applied
        if: steps.format-check.outputs.needs_formatting == 'true' && steps.format-check.outputs.committed == 'false'
        run: |
          echo "‚ùå Code formatting is required but couldn't be auto-committed."
          echo "üìã A pull request has been created with the necessary formatting changes."
          echo "üîó Please review and merge the automated formatting PR."
          exit 1

      - name: Analyze project source
        run: flutter analyze --fatal-infos

      - name: Run tests
        run: flutter test --coverage

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          file: ./coverage/lcov.info
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: false

  build-android:
    name: Build Android
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.32.0'
          channel: 'stable'
          cache: true

      - name: Get dependencies
        run: flutter pub get

      - name: Build APK
        run: flutter build apk --release

      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: android-apk
          path: build/app/outputs/flutter-apk/app-release.apk
          retention-days: 30

  build-ios:
    name: Build iOS
    runs-on: macos-latest
    needs: test

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.32.0'
          channel: 'stable'
          cache: true

      - name: Get dependencies
        run: flutter pub get

      - name: Build iOS (no codesign)
        run: flutter build ios --release --no-codesign

      - name: Create iOS archive
        run: |
          cd build/ios/iphoneos
          tar -czf ios-build.tar.gz Runner.app

      - name: Upload iOS artifact
        uses: actions/upload-artifact@v4
        with:
          name: ios-build
          path: build/ios/iphoneos/ios-build.tar.gz
          retention-days: 30

  build-web:
    name: Build Web
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.32.0'
          channel: 'stable'
          cache: true

      - name: Get dependencies
        run: flutter pub get

      - name: Build Web
        run: flutter build web --release

      - name: Upload Web artifact
        uses: actions/upload-artifact@v4
        with:
          name: web-build
          path: build/web/
          retention-days: 30

  security:
    name: Security Scan
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.32.0'
          channel: 'stable'
          cache: true

      - name: Get dependencies
        run: flutter pub get

      - name: Check for vulnerabilities
        run: dart pub audit
        continue-on-error: true

  deploy-web:
    name: Deploy Web to GitHub Pages
    runs-on: ubuntu-latest
    needs: [test, build-web]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    permissions:
      contents: read
      pages: write
      id-token: write

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: Download web build
        uses: actions/download-artifact@v4
        with:
          name: web-build
          path: ./web-build

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload to GitHub Pages
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./web-build

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
