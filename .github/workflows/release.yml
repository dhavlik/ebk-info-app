name: Release

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version (e.g., v1.0.0)'
        required: true
        type: string

permissions:
  contents: write
  actions: read
  pages: write
  id-token: write

jobs:
  create-release:
    name: Create Release
    runs-on: ubuntu-latest

    outputs:
      version: ${{ steps.get_version.outputs.version }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get version
        id: get_version
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "version=${{ github.event.inputs.version }}" >> $GITHUB_OUTPUT
          else
            echo "version=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
          fi

      - name: Create Release
        run: |
          gh release create "${{ steps.get_version.outputs.version }}" \
            --title "Release ${{ steps.get_version.outputs.version }}" \
            --notes "üéâ Release ${{ steps.get_version.outputs.version }}

          This release includes:
          - üì± Android APK
          - üåê Web application

          Download the appropriate package for your platform below." \
            --draft=false \
            --prerelease=false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-android:
    name: Build Android Release
    runs-on: ubuntu-latest
    needs: create-release

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.32.0'
          channel: 'stable'
          cache: true

      - name: Get dependencies
        run: flutter pub get

      - name: Run tests
        run: |
          # Run unit and widget tests, excluding integration tests for now
          flutter test \
            --exclude-tags=integration \
            --dart-define=FLUTTER_TEST_INTEGRATION_DISABLED=true

      - name: Build APK
        run: flutter build apk --release

      - name: Upload APK to Release
        run: |
          gh release upload "${{ needs.create-release.outputs.version }}" \
            build/app/outputs/flutter-apk/app-release.apk \
            --clobber
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-web:
    name: Build Web Release
    runs-on: ubuntu-latest
    needs: create-release

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.32.0'
          channel: 'stable'
          cache: true

      - name: Get dependencies
        run: flutter pub get

      - name: Build Web
        run: flutter build web --release --base-href="/ebk-info-app/release/"

      - name: Upload Web Artifact
        uses: actions/upload-artifact@v4
        with:
          name: web-build
          path: build/web/
          retention-days: 90

      - name: Create Web Archive for Release
        run: |
          cd build
          tar -czf web-build.tar.gz web/

      - name: Upload Web Build to Release
        run: |
          gh release upload "${{ needs.create-release.outputs.version }}" \
            build/web-build.tar.gz \
            --clobber
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: build/web
          destination_dir: release
          keep_files: true
          force_orphan: false
